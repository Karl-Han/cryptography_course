use super::*;

#[test]
fn bool_to_i32() {
    assert_eq!(true as i32, 1);
    assert_eq!(false as i32, 0);
}

#[test]
fn l0_test() {
    let expect = [0xa7, 0xff, 0xc6, 0xf8, 0xbf, 0x1e, 0xd7, 0x66, 0x51, 0xc1, 0x47, 0x56, 0xa0, 0x61, 0xd6, 0x62, 0xf5, 0x80, 0xff, 0x4d, 0xe4, 0x3b, 0x49, 0xfa, 0x82, 0xd8, 0x0a, 0x4b, 0x80, 0xf8, 0x43, 0x4a];
    let mut buf = [0u8; 32];
    let mut keccak = Keccakf::new_v256();
    keccak.hash_str("");
    keccak.finalize(&mut buf);

    assert_eq!(buf.len(), expect.len());
    assert_eq!(buf, expect);
}

#[test]
fn l1600_test() {
    let expect = [0x79,0xF3,0x8A,0xDE,0xC5,0xC2,0x03,0x07,0xA9,0x8E,0xF7,0x6E,0x83,0x24,0xAF,0xBF,0xD4,0x6C,0xFD,0x81,0xB2,0x2E,0x39,0x73,0xC6,0x5F,0xA1,0xBD,0x9D,0xE3,0x17,0x87];

    let input = &[0xa3].repeat(200);
    println!("{:02x?}", input);
    let mut buf = [0u8; 32];
    
    let mut keccak = Keccakf::new_v256();
    keccak.hash(input);
    keccak.finalize(&mut buf);

    assert_eq!(buf.len(), expect.len());
    assert_eq!(buf, expect);
}
